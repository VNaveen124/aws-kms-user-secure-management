name: Deploy Flask App to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            APP_DIR="/home/${USER}/your-app-directory"
            VENV_DIR="$APP_DIR/venv"
            REPO_URL="https://github.com/VNaveen124/aws-kms-user-secure-management.git"

            # Clone repo if it doesn't exist
            if [ ! -d "$APP_DIR" ]; then
              git clone "$REPO_URL" "$APP_DIR"
            fi

            cd "$APP_DIR"
            git pull origin main

            # Install Python & venv
            sudo apt update
            sudo apt install -y python3 python3-venv python3-pip

            # Create and activate venv
            if [ ! -d "$VENV_DIR" ]; then
              python3 -m venv "$VENV_DIR"
            fi
            source "$VENV_DIR/bin/activate"

            # Install dependencies
            pip install --upgrade pip
            pip install -r aws-kms-user-secure-management/app/requirements.txt

            # Set environment and run Flask
            export FLASK_APP=aws-kms-user-secure-management/app/main.py  # <-- Modify this if path or file name is different
            export FLASK_RUN_PORT=5000
            export FLASK_RUN_HOST=0.0.0.0

            # Kill previous Flask app if running
            pkill -f "flask run" || true

            # Start Flask in background with logs
            nohup "$VENV_DIR/bin/flask" run >> "$APP_DIR/app.log" 2>&1 &
          EOF
